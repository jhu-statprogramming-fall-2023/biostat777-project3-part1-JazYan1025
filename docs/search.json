[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 gganimate authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/example analysis.html","id":"example-analysis","dir":"Articles","previous_headings":"","what":"Example analysis","title":"Example Analysis","text":"vignette demonstrates functions gganimate package using real-world dataset. dataset contains daily stock prices five big tech companies (Apple, Amazon, Facebook, Google, Microsoft) 2010 2021. data obtained link. question aim answer: stock prices big tech companies change time compare ?","code":""},{"path":"/articles/example analysis.html","id":"data-source-and-dictionary","dir":"Articles","previous_headings":"Example analysis","what":"Data source and dictionary","title":"Example Analysis","text":"original data come Yahoo Finance, provides historical stock data various companies. data scraped cleaned Ryo Nakagawara posted Kaggle. data dictionary dataset follows: date: date stock price company: name company open: opening price stock high: highest price stock day low: lowest price stock day close: closing price stock volume: number shares traded day adjusted: adjusted closing price stock, accounts dividends splits","code":"tuesdata <- tidytuesdayR::tt_load('2023-02-07') #> --- Compiling #TidyTuesday Information for 2023-02-07 ---- #> --- There are 2 files available --- #> --- Starting Download --- #>  #>  Downloading file 1 of 2: `big_tech_stock_prices.csv` #>  Downloading file 2 of 2: `big_tech_companies.csv` #> --- Download complete --- tuesdata <- tidytuesdayR::tt_load(2023, week = 6) #> --- Compiling #TidyTuesday Information for 2023-02-07 ---- #> --- There are 2 files available --- #> --- Starting Download --- #>  #>  Downloading file 1 of 2: `big_tech_stock_prices.csv` #>  Downloading file 2 of 2: `big_tech_companies.csv` #> --- Download complete ---  big_tech_stock_prices <- tuesdata$big_tech_stock_prices big_tech_companies <- tuesdata$big_tech_companies"},{"path":"/articles/extra/talks.html","id":"rstudioconf-2019","dir":"Articles > Extra","previous_headings":"","what":"Rstudio::conf 2019","title":"gganimate Talks","text":"Title: gganimate Live Cookbook Abstract: Animation data visualisation becoming increasingly popular attention grabber social media way tell small data stories. gganimate package extends ggplot2 making animations provides grammar animation top grammar graphics. talk quickly introduce gganimate, dive series different animation show made changed expanded. Slides: https://data-imaginist.com/slides/rstudioconf2019/ Video: https://resources.rstudio.com/rstudio-conf-2019/gganimate-live-cookbook","code":""},{"path":"/articles/extra/talks.html","id":"user-2018","dir":"Articles > Extra","previous_headings":"","what":"useR 2018","title":"gganimate Talks","text":"Title: Grammar Animation Abstract: world data visualisation much work put defining grammar static interactive graphics. efforts often coupled development visualisation frameworks grammar reflected API design. Less attention devoted grammar animation, subsequently animation frameworks often missed breadth composability hallmark grammar-driven visualisation frameworks. talk justify present grammar animation position relation graphics interactivity grammar, thus creating clear division responsibility three domains. present R implementation grammar animation builds top ggplot2 framework made available gganimate package, Using examples gganimate ’ll show proposed grammar can used break , reason , animated data visualisation, grammar succinctly can describe diverse animation operations. Slides: https://data-imaginist.com/slides/user2018/ Video:","code":""},{"path":"/articles/gganimate.html","id":"your-first-animation","dir":"Articles","previous_headings":"","what":"Your First Animation","title":"Getting Started","text":"’ll jump right first animation. Don’t worry much understanding code, ’ll dissect later.  go static plot made ggplot2 animated one, simply adding functions gganimate. ❗ transition_states() splits plot data discrete variable animates different states. can seen, additions plot results quite complex animation. get animation? added type transition. Transitions functions interpret plot data order somehow distribute number frames. transition_states() specifically splits data subsets based variable data (Species), calculates intermediary data states ensures smooth transition states (something referred tweening). gganimate provides range different transitions, rest examples ’ll sticking transition_states() see can modify output.","code":"library(gganimate) #> Loading required package: ggplot2 #> No renderer backend detected. gganimate will default to writing frames to separate files #> Consider installing: #> - the `gifski` package for gif output #> - the `av` package for video output #> and restarting the R session  # We'll start with a static plot p <- ggplot(iris, aes(x = Petal.Width, y = Petal.Length)) +    geom_point()  plot(p) anim <- p +    transition_states(Species,                     transition_length = 2,                     state_length = 1)  anim #> Warning: No renderer available. Please install the gifski, av, or magick #> package to create animated output #> NULL"},{"path":"/articles/gganimate.html","id":"easing","dir":"Articles","previous_headings":"","what":"Easing","title":"Getting Started","text":"transition_states() calculates intermediary data tweening, needs decide change one value another progress. concept called easing. default easing linear, others can used, potentially targeting specific aesthetics. Setting easing done ease_aes() function. first argument sets default easing subsequent named arguments sets specific aesthetics. ❗ ease_aes() defines velocity aesthetics change animation.","code":"anim +    ease_aes('cubic-in-out') # Slow start and end for a smoother look #> Warning: No renderer available. Please install the gifski, av, or magick #> package to create animated output #> NULL anim +    ease_aes(y = 'bounce-out') # Sets special ease for y aesthetic #> Warning: No renderer available. Please install the gifski, av, or magick #> package to create animated output #> NULL"},{"path":"/articles/gganimate.html","id":"labeling","dir":"Articles","previous_headings":"","what":"Labeling","title":"Getting Started","text":"can quite hard understand animation without indication time point relates . gganimate solves providing set variables frame, can inserted plot labels using glue syntax. ❗ Use glue syntax insert frame variables plot labels titles. Different transitions provide different frame variables. closest_state makes sense transition_states() thus available transition used.","code":"anim +    ggtitle('Now showing {closest_state}',           subtitle = 'Frame {frame} of {nframes}') #> Warning: No renderer available. Please install the gifski, av, or magick #> package to create animated output #> NULL"},{"path":"/articles/gganimate.html","id":"object-permanence","dir":"Articles","previous_headings":"","what":"Object Permanence","title":"Getting Started","text":"animation , appears data single measurement changes gradually flower measured somehow morphs three different iris species. probably Fisher conducted experiment got numbers. general, make animation, graphic elements transition instances underlying phenomenon. sounds complicated less principle governs makes sense draw line two observations. wouldn’t connect observations different iris species, repeated observations plant fine connect. thing animations. Just make clear (important concept). line plot equivalent animation :  Ugh… , fix tell gganimate morph observations different species others? key group aesthetic. may familiar aesthetic plotting lines polygons, gganimate takes central place. Data group aesthetic interpreted linked across states. semantics group aesthetic ggplot2 undefined get calculated based interaction discrete aesthetics (sans label). none exists, iris animation, data get group, thus matched gganimate. , two ways fix plot: Add aesthetics distinguish different species Set group directly ❗ group aesthetic defines data layer matched across animation. general 2) preferred makes intent explicit. also makes possible match data different discrete aesthetics keeping (now obviously faulty) transition different colour different species)","code":"ggplot(iris, aes(x = Petal.Width, y = Petal.Length)) +    geom_line(aes(group = rep(1:50, 3)), colour = 'grey') +    geom_point() ggplot(iris, aes(x = Petal.Width, y = Petal.Length)) +    geom_point(aes(colour = Species)) +    transition_states(Species,                     transition_length = 2,                     state_length = 1) #> Warning: No renderer available. Please install the gifski, av, or magick #> package to create animated output #> NULL ggplot(iris, aes(x = Petal.Width, y = Petal.Length)) +    geom_point(aes(group = seq_along(Species))) +    transition_states(Species,                     transition_length = 2,                     state_length = 1) #> Warning: No renderer available. Please install the gifski, av, or magick #> package to create animated output #> NULL ggplot(iris, aes(x = Petal.Width, y = Petal.Length)) +    geom_point(aes(colour = Species, group = 1L)) +    transition_states(Species,                     transition_length = 2,                     state_length = 1) #> Warning: No renderer available. Please install the gifski, av, or magick #> package to create animated output #> NULL"},{"path":"/articles/gganimate.html","id":"enter-and-exit","dir":"Articles","previous_headings":"","what":"Enter and Exit","title":"Getting Started","text":"may made animation correct separating data different species, also made quite bit boring. Now simply appears three static plots shown one time, hardly attention grabber. way animate appearance disappearance data… Enter enter exit functions. functions responsible modifying state appearing (entering) disappearing (exiting) data, animation can tween new state. Let’s spice animation bit: ❗ enter exit functions used modify aesthetics appearing disappearing data entrance exit may animated. gganimate comes range different functions, using enter_manual() exit_manual() functions can create . Enter exit functions composable though, can often come pretty far combining preexisting ones","code":"anim <- ggplot(iris, aes(x = Petal.Width, y = Petal.Length)) +    geom_point(aes(colour = Species), size = 2) +    transition_states(Species,                     transition_length = 2,                     state_length = 1)  anim +    enter_fade() +    exit_shrink() #> Warning: No renderer available. Please install the gifski, av, or magick #> package to create animated output #> NULL anim +    enter_fade() + enter_drift(x_mod = -1) +    exit_shrink() + exit_drift(x_mod = 5) #> Warning: No renderer available. Please install the gifski, av, or magick #> package to create animated output #> NULL"},{"path":"/articles/gganimate.html","id":"rendering","dir":"Articles","previous_headings":"","what":"Rendering","title":"Getting Started","text":"examples animations simply appeared printed animation object, just like expect ggplot2. lot things happening automatically, might want take control, section give brief overview rendering. gganimate’s model animation dimensionless way ggplot2 describe plots independent final width height plot. means final number frames frame-rate ever given ask gganimate render animation. print animation object animate() function called animation default arguments, : nframes sets number frames (defaults 100) fps sets number frames (defaults 10) dev sets device used render frame (defaults 'png') renderer sets function used combine frame animate (defaults gifski_renderer()) arguments well (e.g. ... passed device can set width, height, dpi, etc), important. don’t like defaults can either call animate() directly values choosing, modify defaults setting new options(gganimate.<argument> = <value>). topic requires additional words renderers. default use gifski combine frames gif. gifs great virtually supported everywhere, gifski fast, high quality converter. Still, may reasons want different output. gganimate quite agnostic want combine frames , comes set predefined renderers, function takes vector paths image files along frame-rate, . return value renderer ultimately returned animate() function. couple examples different animate() calls: need save animation later use can use anim_save() function. works much like ggsave() ggplot2 automatically grabs last rendered animation specify one directly.","code":"# Video output animate(   anim + enter_fade() + exit_fly(y_loc = 1),   renderer = av_renderer() ) # Different size and resolution animate(   anim + ease_aes(x = 'bounce-out') + enter_fly(x_loc = -1) + exit_fade(),   width = 400, height = 600, res = 35 ) #> Warning: No renderer available. Please install the gifski, av, or magick #> package to create animated output"},{"path":"/articles/gganimate.html","id":"want-more","dir":"Articles","previous_headings":"","what":"Want more?","title":"Getting Started","text":"guide far exhaustive, hopefully given broad understanding gganimate works. still explore scratched surface transitions, let alone mentioned views shadows. now left . fantastic joy discovery things now learned ready go digging .","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thomas Lin Pedersen. Author, maintainer. David Robinson. Author. Posit, PBC. Copyright holder, funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pedersen T, Robinson D (2023). gganimate: Grammar Animated Graphics. https://gganimate.com, https://github.com/thomasp85/gganimate.","code":"@Manual{,   title = {gganimate: A Grammar of Animated Graphics},   author = {Thomas Lin Pedersen and David Robinson},   year = {2023},   note = {https://gganimate.com, https://github.com/thomasp85/gganimate}, }"},{"path":"/index.html","id":"gganimate-","dir":"","previous_headings":"","what":"A Grammar of Animated Graphics","title":"A Grammar of Animated Graphics","text":"gganimate extends grammar graphics implemented ggplot2 include description animation. providing range new grammar classes can added plot object order customise change time. transition_*() defines data spread relates across time. view_*() defines positional scales change along animation. shadow_*() defines data points time presented given point time. enter_*()/exit_*() defines new data appear old data disappear course animation. ease_aes() defines different aesthetics eased transitions.","code":""},{"path":"/index.html","id":"an-example","dir":"","previous_headings":"","what":"An Example","title":"A Grammar of Animated Graphics","text":"might seem bit abstract. Let’s try contrived example:  take simple boxplot fuel consumption function cylinders lets transition number gears available cars. discrete split (gear best described ordered factor) use transition_states provides relative length use transition state view. combinations data present states missing box. define box appears fade view, whereas shrink away disappear. Lastly decide use sinusoidal easing aesthetics (, y changing)","code":"library(ggplot2) library(gganimate)  ggplot(mtcars, aes(factor(cyl), mpg)) +    geom_boxplot() +    # Here comes the gganimate code   transition_states(     gear,     transition_length = 2,     state_length = 1   ) +   enter_fade() +    exit_shrink() +   ease_aes('sine-in-out')"},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Grammar of Animated Graphics","text":"gganimate available CRAN can installed install.packages('gganimate'). wish install development version can install directly github using devtools:","code":"# install.packages('pak') pak::pak('thomasp85/gganimate')"},{"path":"/index.html","id":"yet-another-example","dir":"","previous_headings":"","what":"Yet Another Example","title":"A Grammar of Animated Graphics","text":"impossible cover everything possible gganimate README, animations fun, let’s least one :  example see use transition_time() can used continuous variables year. transition necessary provide transition state length “transition variable” provides directly (e.g. take twice long transition 1980 1990 compared 2000 2005). also see use string literal interpolation titles. gganimate lets specify variables evaluate inside titles different transitions provide different type information use.","code":"library(gapminder)  ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +   geom_point(alpha = 0.7, show.legend = FALSE) +   scale_colour_manual(values = country_colors) +   scale_size(range = c(2, 12)) +   scale_x_log10() +   facet_wrap(~continent) +   # Here comes the gganimate specific bits   labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +   transition_time(year) +   ease_aes('linear')"},{"path":"/index.html","id":"where-is-my-animation","dir":"","previous_headings":"","what":"Where is my animation?","title":"A Grammar of Animated Graphics","text":"gganimate mimics way ggplot2 renders output, rendering done automatically gganim object printed. hood, animate() function called renders frame passes frames renderer functions takes care combining final animation. default renderer gifski_renderer() returns gif_image object simple wrapper around path gif file. animate() called implicitly part print gif_image object available using last_animation() function (analogous ggplot2::last_plot()). order save animation specific location, can use anim_save() function , like ggplot2::ggsave, defaults taking last rendered animation writes file.","code":""},{"path":"/index.html","id":"i-dont-like-gifs","dir":"","previous_headings":"","what":"I don’t like gifs…","title":"A Grammar of Animated Graphics","text":"gif fantastic format animations due wide support, sometimes another format required. gganimate agnostic renderer default use gifski combine frames gif, doesn’t . passing alternate renderer animate() function can control animation format, gganimate comes bunch (can write ). create video files can e.g. use ffmpeg_renderer(): Video output automatically embedded RMarkdown documents, GitHub strips video rendering READMEs can’t see ’s support rendering sprite sheets vice.","code":"p <- ggplot(airquality, aes(Day, Temp)) +    geom_line(size = 2, colour = 'steelblue') +    transition_states(Month, 4, 1) +    shadow_mark(size = 1, colour = 'grey') animate(p, renderer = ffmpeg_renderer())"},{"path":"/index.html","id":"old-api","dir":"","previous_headings":"","what":"Old API","title":"A Grammar of Animated Graphics","text":"second iteration gganimate package. first, developed David Robinson different API, relied specifying animation frame membership inside aes() blocks geom_*() calls. approach easy grasp, essentially limited capabilities thus abandoned thorough grammar. Code written old API work gganimate version come future support . wish continue using old API avoid upgrading gganimate. ’ve already upgraded wish downgrade, latest version old API available GitHub release. wish convert old animations new API, closest get probably transition_manual, even though completely substitutable:","code":"# Old code ggplot(mtcars) +    geom_boxplot(aes(factor(cyl), mpg, frame = gear))  # New code ggplot(mtcars) +    geom_boxplot(aes(factor(cyl), mpg)) +    transition_manual(gear)"},{"path":"/reference/anim_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save an animation to a file — anim_save","title":"Save an animation to a file — anim_save","text":"function analogous ggplot2::ggsave() default takes last created animation saves specific location. gganimate supports arbitrary renderers, thus return types, returned object must implement save_animation method able used anim_save(). provided natively gif_image magick-image objects.","code":""},{"path":"/reference/anim_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save an animation to a file — anim_save","text":"","code":"anim_save(filename, animation = last_animation(), path = NULL, ...)"},{"path":"/reference/anim_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save an animation to a file — anim_save","text":"filename File name create disk. animation animation object save, returned animate(). Defaults last rendered animation using last_animation() path Path directory save plot : path filename combined create fully qualified file name. Defaults working directory. ... arguments passed animate() animation gganim object","code":""},{"path":"/reference/animate.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a gganim object — animate","title":"Render a gganim object — animate","text":"function takes gganim object renders animation. nature animation dependent renderer, defaults using gifski render gif. length framerate decided render time can two combination nframes, fps, duration. Rendering happening discrete time units. means event animation rounded nearest frame (e.g. entering always take whole number frames). means rounding artifacts possible rendering frames. avoid can increase detail argument. detail get multiplied nframes resulting number frames get calculated, nframes evenly spaced frames rendered.","code":""},{"path":"/reference/animate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a gganim object — animate","text":"","code":"animate(plot, ...)  # S3 method for gganim animate(   plot,   nframes,   fps,   duration,   detail,   renderer,   device,   ref_frame,   start_pause,   end_pause,   rewind,   ... )  # S3 method for gganim print(x, ...)  knit_print.gganim(x, options, ...)"},{"path":"/reference/animate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a gganim object — animate","text":"plot, x gganim object ... Arguments passed device. available device arguments, see grDevices::png() grDevices::svg() nframes number frames render (default 100) fps framerate animation frames/sec (default 10) duration length animation seconds (unset default) detail number additional frames calculate, per frame (default 1) renderer function used render generated frames animation. Gets vector paths images along framerate. (default use gifski_renderer() gifski installed. use magick_renderer() magick installed av_renderer() av installed. fails use file_renderer()) device device use rendering single frames. Possible values 'png', 'ragg_png' (requires ragg package), 'jpeg', 'tiff', 'bmp', 'svg', 'svglite' (requires svglite package). (default 'png') ref_frame frame use fixing dimensions plot, e.g. space available axis text. Defaults first frame. Negative values counts backwards (-1 last frame) (default 1) start_pause, end_pause Number times repeat first last frame animation (default 0 ) rewind animation roll back end (default FALSE) options chunk options currently executing chunk","code":""},{"path":"/reference/animate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render a gganim object — animate","text":"return value renderer function","code":""},{"path":"/reference/animate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Render a gganim object — animate","text":"print.gganim()  alias animate() way print.ggplot() alias plot.ggplot(). ensures gganimate behaves ggplot2-like produces animation object printed. plot() method different produces single frame inspection (default frame 50 100). Animations can saved disk using anim_save() much way ggsave() works static plots.","code":""},{"path":"/reference/animate.html","id":"defaults","dir":"Reference","previous_headings":"","what":"Defaults","title":"Render a gganim object — animate","text":"possible overwrite defaults used gganimate animation setting options() (prefixed gganimate.. example, like change default nframes 50 call options(gganimate.nframes = 50). order set default device arguments (normally pass ...) use gganimate.dev_args options provide list arguments e.g. options(gganimate.dev_args = list(width = 800, height = 600)) Defaults set way can still overridden giving arguments directly animate(). knitr Support:  possible specify arguments animate() chunk options using gganimate knitr. Arguments specified way precedence defaults, arguments specified directly animate(). arguments provided list gganimate chunk option, e.g. {r, gganimate = list(nframes = 50, fps = 20)}. build-knitr options relevance animation used unless given specifically gganimate list option. native knitr options supported : dev: set device dev.args: set additional arguments device (...) fig.width, fig.height, fig.asp, fig.dim: set width height device.","code":""},{"path":"/reference/animate.html","id":"label-variables","dir":"Reference","previous_headings":"","what":"Label variables","title":"Render a gganim object — animate","text":"plots certain set variables available string literal interpolation within plot labels. : frame gives frame index current frame nframes gives total number frames animation progress gives progress animation current frame (equal frame/nframes) data gives layer data current frame (list data frames) , transition view use can also make variables available. Consult documentation detail.","code":""},{"path":"/reference/animate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render a gganim object — animate","text":"","code":"anim <- ggplot(mtcars, aes(mpg, disp)) +   geom_point(aes(color = gear)) +   transition_states(gear, transition_length = 2, state_length = 1) +   enter_fade() +   exit_fade()  if (FALSE) { # Explicitly animate using default (same as just printing the animation) animate(anim)  # Change duration and framerate animate(anim, fps = 20, duration = 15)  # Make the animation pause at the end and then rewind animate(anim, nframes = 100, end_pause = 10, rewind = TRUE)  # Use a different renderer animate(anim, renderer = file_renderer('~/animation/'))[1:6]  # Specify device dimensions and/or resolution animate(anim, height = 2, width = 3, units = \"in\", res = 150) }"},{"path":"/reference/ease_aes.html","id":null,"dir":"Reference","previous_headings":"","what":"Control easing of aesthetics — ease_aes","title":"Control easing of aesthetics — ease_aes","text":"Easing defines value change another tweening. progress linearly, maybe start slowly build momentum. gganimate, aesthetic computed variable can tweened individual easing functions using ease_aes() function. easing functions implemented tweenr available, see tweenr::display_ease overview. Setting ease x /y also affect related positional aesthetics (e.g. xmin, yend, etc).","code":""},{"path":"/reference/ease_aes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control easing of aesthetics — ease_aes","text":"","code":"ease_aes(default = \"linear\", ...)"},{"path":"/reference/ease_aes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control easing of aesthetics — ease_aes","text":"default default easing function use (defaults 'linear') ... Override easing specific aesthetics","code":""},{"path":"/reference/ease_aes.html","id":"easing-functions","dir":"Reference","previous_headings":"","what":"Easing functions","title":"Control easing of aesthetics — ease_aes","text":"quadratic Models power--2 function cubic Models power--3 function quartic Models power--4 function quintic Models power--5 function sine Models sine function circular Models pi/2 circle arc exponential Models exponential function elastic Models elastic release energy back Models pullback relase bounce Models bouncing ball Modifiers -easing function applied --easing function applied reverse --first half transition applied -, last half reversed","code":""},{"path":"/reference/ease_aes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Control easing of aesthetics — ease_aes","text":"","code":"anim <- ggplot(mtcars, aes(mpg, disp)) +   transition_states(gear, transition_length = 2, state_length = 1) +   enter_fade() +   exit_fade()  if (FALSE) { # Default uses linear easing animate(anim) }  # Change all to 'cubic-in-out' for a smoother appearance anim1 <- anim +   ease_aes('cubic-in-out') if (FALSE) { animate(anim1) }  # Only change easing of y variables anim2 <- anim +   ease_aes(y = 'bounce-in') if (FALSE) { animate(anim2) }"},{"path":"/reference/enter_exit.html","id":null,"dir":"Reference","previous_headings":"","what":"Define how entering and exiting data behaves — enter_exit","title":"Define how entering and exiting data behaves — enter_exit","text":"purpose enter_*() exit_*() control happens data persist tween. general non-persistent data transformed invisible version can tweened , e.g. setting opacity 0 moving element -screen. possible define transformations, rely build effects.","code":""},{"path":"/reference/enter_exit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define how entering and exiting data behaves — enter_exit","text":"","code":"enter_manual(default = NULL, ..., name = \"manual\")  enter_appear(early = FALSE, ...)  enter_fade(..., alpha = 0)  enter_grow(..., size = 0)  enter_recolour(..., colour = \"white\", fill = colour)  enter_recolor(..., color = \"white\", fill = color)  enter_fly(..., x_loc = NA, y_loc = NA)  enter_drift(..., x_mod = 0, y_mod = 0)  enter_reset()  exit_manual(default = NULL, ..., name = \"manual\")  exit_disappear(early = FALSE, ...)  exit_fade(..., alpha = 0)  exit_shrink(..., size = 0)  exit_recolour(..., colour = \"white\", fill = colour)  exit_recolor(..., color = \"white\", fill = color)  exit_fly(..., x_loc = NA, y_loc = NA)  exit_drift(..., x_mod = 0, y_mod = 0)  exit_reset()"},{"path":"/reference/enter_exit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define how entering and exiting data behaves — enter_exit","text":"default default transformation use ... Additional specific transformations either named geom (e.g. bar, position layer stack, e.g. \"2\") name name manual modification (used printing object) early data appear beginning transition end alpha start/end transparency. size proportional start/end size. 0 means complete shrinking 1 means shrinking colour, color, fill start/end colour fill elements (dis)appear x_loc, y_loc Start end positions graphic elements x_mod, y_mod Modification add entering exiting data","code":""},{"path":"/reference/enter_exit.html","id":"user-defined-transformations","dir":"Reference","previous_headings":"","what":"User-defined transformations","title":"Define how entering and exiting data behaves — enter_exit","text":"enter/exit functions allows user add additional transformation functions targeting specific layers. functions named, name understood reference class geoms applies . functions unnamed numbered apply layer matching index stack. Named indexed transformations mixed. modifications except enter_manual()/exit_manual() sets range modifications already, can added .... manual versions default transformation can set apply layers match given transformations. Often single default transformation enough specific transformations needed. Transformation can given expression can converted rlang::as_function(). means purrr style lambda functions allowed addition anonymous functions etc. Transformation functions must accept data.frame return data.frame dimensions. function called entering/exiting layer data, except case polygon- path-like layers case function recieves entering/exiting polygon/path data one one. special option set transformation NULL instead function. case entering exiting data simply appear/disappear longer part frame.","code":""},{"path":"/reference/enter_exit.html","id":"modification-composition","dir":"Reference","previous_headings":"","what":"Modification composition","title":"Define how entering and exiting data behaves — enter_exit","text":"Enter exit modifications composable multiple different ones can added animation applied turn. can also combine multiples save new enter exit modification using c(). Due composable nature enter exit modifications possible overwrite prior modification adding new. needed start scratch sentinels enter_reset() exit_reset() provided clears prior modifications.","code":""},{"path":"/reference/enter_exit.html","id":"modification-types","dir":"Reference","previous_headings":"","what":"Modification types","title":"Define how entering and exiting data behaves — enter_exit","text":"range modification types provided gganimate using enter_manual()/exit_manual() modification composition possible create . appear/disappear simply make elements appear/disappear either start end transition. default nothing else added. fade simply set alpha value zero making elements fade /transition. grow/shrink set elements zero size making gradually grow / shrink existence. Zero size depends type layer, e.g. polygons/paths points set mean, points size/stroke set zero. recolour/recolor change colour /fill elements making gradually change defined colour try colour. aware unless colour fill set background colour plot modification needs combined others ensure elements abruptly appear. fly set specific x y position elements enter / exit , irrespectible real position. drift modify real position entering exiting elements specified amount, e.g. setting x_mod = -5 let elements enter /exit left terminal position 5 points left real position.","code":""},{"path":"/reference/enter_exit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define how entering and exiting data behaves — enter_exit","text":"","code":"# Default is appear/disappear anim <- ggplot(mtcars, aes(factor(gear), mpg)) +   geom_boxplot() +   transition_states(gear, 2, 1)  # Fade-in, fly-out anim1 <- anim +   enter_fade() +   exit_fly(x_loc = 7, y_loc = 40)  # Enter and exit accumulates anim2 <- anim +   enter_fade() + enter_grow() +   exit_fly(x_loc = 7, y_loc = 40) + exit_recolour(fill = 'forestgreen')"},{"path":"/reference/frame_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Access metadata about the frames in an animation — frame_vars","title":"Access metadata about the frames in an animation — frame_vars","text":"function extracts metadata generated frame rendering. corresponds information available labels string literal interpretation thus dependent transition view used animation.","code":""},{"path":"/reference/frame_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access metadata about the frames in an animation — frame_vars","text":"","code":"frame_vars(animation = last_animation())"},{"path":"/reference/frame_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access metadata about the frames in an animation — frame_vars","text":"animation animation extract metadata . Defaults last rendered animation","code":""},{"path":"/reference/frame_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access metadata about the frames in an animation — frame_vars","text":"data.frame row per frame animation metadata columns","code":""},{"path":"/reference/gganimate-ggproto.html","id":null,"dir":"Reference","previous_headings":"","what":"Base ggproto classes for gganimate — gganimate-ggproto","title":"Base ggproto classes for gganimate — gganimate-ggproto","text":"creating new transition, view, etc. another package, need extend ggproto classes defined gganimate","code":""},{"path":[]},{"path":"/reference/gganimate-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gganimate: A Grammar of Animated Graphics — gganimate-package","title":"gganimate: A Grammar of Animated Graphics — gganimate-package","text":"grammar graphics implemented 'ggplot2' package successful providing powerful API creating static visualisation. order extend API animated graphics package provides completely new set grammar, fully compatible 'ggplot2' specifying transitions animations flexible extensible way.","code":""},{"path":"/reference/gganimate-package.html","id":"good-starting-points","dir":"Reference","previous_headings":"","what":"Good starting points","title":"gganimate: A Grammar of Animated Graphics — gganimate-package","text":"animate() function documentation describes specify animation rendered, whereas documentation different transition functions, e.g. transition_states(), describe declare animation. ease_aes() different enter exit functions good understand order modify tweening animation. Apart included documentation also web ressources worth mentioning: gganimate wiki includes user supplied example walkthroughs learngganimate project rOpenSci Labs includes long range detailed explorations different gganimate functions","code":""},{"path":[]},{"path":"/reference/gganimate-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gganimate: A Grammar of Animated Graphics — gganimate-package","text":"Maintainer: Thomas Lin Pedersen thomasp85@gmail.com (ORCID) Authors: David Robinson admiral.david@gmail.com contributors: Posit, PBC [copyright holder, funder]","code":""},{"path":"/reference/gganimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Catch attempt to use the old API — gganimate","title":"Catch attempt to use the old API — gganimate","text":"Catch attempt use old API","code":""},{"path":"/reference/gganimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Catch attempt to use the old API — gganimate","text":"","code":"gganimate(...)  gg_animate(...)"},{"path":"/reference/gif_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap a gif file for easy handling — gif_file","title":"Wrap a gif file for easy handling — gif_file","text":"simple class gif files takes care printing file correctly different environment (e.g. knitr, RStudio, etc.). renderer produces gif file can wrap final output gif_file get benefits free.","code":""},{"path":"/reference/gif_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap a gif file for easy handling — gif_file","text":"","code":"gif_file(file)  # S3 method for gif_image print(x, ...)  knit_print.gif_image(x, options, ...)  # S3 method for gif_image split(x, f, drop = FALSE, ...)"},{"path":"/reference/gif_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap a gif file for easy handling — gif_file","text":"file gif file wrapped x gif_image object ... Arguments passed f ‘factor’ sense .factor(f) defines grouping, list factors case interaction used grouping. drop logical indicating levels occur dropped     (f factor list).","code":""},{"path":"/reference/gif_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap a gif file for easy handling — gif_file","text":"gif_file returns gif_image object. split returns list magick-image objects requires magick work.","code":""},{"path":"/reference/last_animation.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the last rendered animation — last_animation","title":"Retrieve the last rendered animation — last_animation","text":"Retrieve last rendered animation","code":""},{"path":"/reference/last_animation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the last rendered animation — last_animation","text":"","code":"last_animation()  set_last_animation(value)"},{"path":"/reference/layer_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Define what graphical type a layer is — group_column","title":"Define what graphical type a layer is — group_column","text":"Define graphical type layer ","code":""},{"path":"/reference/layer_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define what graphical type a layer is — group_column","text":"","code":"group_column(x)  layer_type(x)  match_shapes(x)"},{"path":"/reference/layer_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define what graphical type a layer is — group_column","text":"x Layer, Geom, Stat","code":""},{"path":"/reference/renderers.html","id":null,"dir":"Reference","previous_headings":"","what":"Renderers provided by gganimate — renderers","title":"Renderers provided by gganimate — renderers","text":"purpose renderer function take list image files assemble animation. gganimate provide range renderers also possible provide , supplied ones lacking way. renderer given argument animate()/print() receives paths individual frames created.","code":""},{"path":"/reference/renderers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Renderers provided by gganimate — renderers","text":"","code":"gifski_renderer(file = NULL, loop = TRUE, width = NULL, height = NULL)  file_renderer(dir = \".\", prefix = \"gganim_plot\", overwrite = FALSE)  av_renderer(file = NULL, vfilter = \"null\", codec = NULL, audio = NULL)  ffmpeg_renderer(   format = \"auto\",   ffmpeg = NULL,   options = list(pix_fmt = \"yuv420p\") )  magick_renderer(loop = TRUE)  sprite_renderer()"},{"path":"/reference/renderers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renderers provided by gganimate — renderers","text":"file animation file loop Logical. produced gif loop width, height Dimensions animation pixels. NULL take dimensions frame, otherwise rescale . dir directory copy frames prefix filename prefix use image files overwrite Logical. TRUE, existing files overwritten. vfilter string defining ffmpeg filter graph. parameter -vf argument ffmpeg command line utility. codec name video codec. default libx264 formats, usually best choice. See av documentation information. audio optional file sounds add video format video format encode animation ffmpeg location ffmpeg executable. NULL assumed search path options Either character vector command line options ffmpeg named list option-value pairs converted command line options automatically","code":""},{"path":"/reference/renderers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Renderers provided by gganimate — renderers","text":"provided renderers factory functions returns new function take frames fps arguments, former character vector file paths images holding separate frames, order appear, latter framerate use animation frames-per-second. return type different returned renderers : gifski_renderer: Returns gif_image object magick_renderer: Returns magick-image object av_renderer: Returns video_file object ffmpeg_renderer: Returns video_file object file_renderer: Returns vector file paths","code":""},{"path":"/reference/renderers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Renderers provided by gganimate — renderers","text":"gifski_renderer() used unless otherwise specified animate() options('gganimate.renderer'). renderer requires gifski png packages installed. possible renderers : magick_renderer() requires magick package produce gif. gifski installed, rendering much slower using gifski_renderer() can potentially result system problems many frames need rendered (gifski installed magick use hood) av_renderer() requies av package uses ffmpeg encode animation video file. ffmpeg_renderer() requires ffmpeg installed computer. av_renderer() use ffmpeg encode animation video sprite_renderer() requires magick render animation spritesheet file_renderer() dependencies simply returns animation list image files (one frame) possible create renderer function providing matches required signature (frames fps argument). return value provided function return value ultimately given animate()","code":""},{"path":"/reference/renderers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Renderers provided by gganimate — renderers","text":"","code":"anim <- ggplot(mtcars, aes(mpg, disp)) +   transition_states(gear, transition_length = 2, state_length = 1) +   enter_fade() +   exit_fade()  if (FALSE) { # Renderers are specified in the `animate()` function animate(anim, renderer = sprite_renderer()) }"},{"path":"/reference/save_animation.html","id":null,"dir":"Reference","previous_headings":"","what":"Infrastructure for animation saving — save_animation","title":"Infrastructure for animation saving — save_animation","text":"returned animation object wish support anim_save() need implement method","code":""},{"path":"/reference/save_animation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infrastructure for animation saving — save_animation","text":"","code":"save_animation(animation, file)"},{"path":"/reference/save_animation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infrastructure for animation saving — save_animation","text":"animation animation object save file file path save ","code":""},{"path":"/reference/shadow_mark.html","id":null,"dir":"Reference","previous_headings":"","what":"Show original data as background marks — shadow_mark","title":"Show original data as background marks — shadow_mark","text":"shadow lets show raw data behind current frame. past /future raw data can shown styled want.","code":""},{"path":"/reference/shadow_mark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show original data as background marks — shadow_mark","text":"","code":"shadow_mark(past = TRUE, future = FALSE, ..., exclude_layer = NULL)"},{"path":"/reference/shadow_mark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show original data as background marks — shadow_mark","text":"past raw data earlier animation shown future raw data later animation shown ... changes shadow data, e.g. alpha = alpha/2 colour = 'grey' exclude_layer Indexes layers excluded.","code":""},{"path":[]},{"path":"/reference/shadow_mark.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show original data as background marks — shadow_mark","text":"","code":"# Use any of the aesthetics to add a style to either the past or the future raw data. # Adding a grouping variable in a transition call prior to calling `shadow_mark()` will # allow transitioning through different states in time.  p1 <- ggplot(airquality, aes(Day, Temp)) +   geom_line(color = 'red', size = 1) +   transition_time(Month) +   shadow_mark(colour = 'black', size = 0.75) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead.  # animate(p1)  # Add a future = TRUE argument to show data later in the animation.  p2 <- ggplot(airquality, aes(Day, Temp)) +   geom_line(color = 'red', size = 1) +   transition_time(Month) +   shadow_mark(color = 'black', size = 0.75, past = FALSE, future = TRUE)  # animate(p2)"},{"path":"/reference/shadow_null.html","id":null,"dir":"Reference","previous_headings":"","what":"A non-existent shadow — shadow_null","title":"A non-existent shadow — shadow_null","text":"default shadow simply show anything data current frame.","code":""},{"path":"/reference/shadow_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A non-existent shadow — shadow_null","text":"","code":"shadow_null()"},{"path":[]},{"path":"/reference/shadow_trail.html","id":null,"dir":"Reference","previous_headings":"","what":"A trail of evenly spaced old frames — shadow_trail","title":"A trail of evenly spaced old frames — shadow_trail","text":"shadow trace movement animation keeping every nth frame thus produce breadcrumb-like trail. Note shadow frames equidistant space time (, point moves slowly crumbs closer ). possible modify look shadow changing different graphic parameters data","code":""},{"path":"/reference/shadow_trail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A trail of evenly spaced old frames — shadow_trail","text":"","code":"shadow_trail(distance = 0.05, max_frames = Inf, ..., exclude_layer = NULL)"},{"path":"/reference/shadow_trail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A trail of evenly spaced old frames — shadow_trail","text":"distance temporal distance frames show, fraction full animation length max_frames maximum number shadow frames show ... changes shadow data, e.g. alpha = alpha/2 colour = 'grey' exclude_layer Indexes layers excluded.","code":""},{"path":[]},{"path":"/reference/shadow_trail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A trail of evenly spaced old frames — shadow_trail","text":"","code":"anim <- ggplot(airquality, aes(Day, Temp, colour = factor(Month))) +   geom_point() +   transition_time(Day)  # Change distance between points anim1 <- anim +   shadow_trail(0.02)  # Style shadow differently anim2 <- anim +   shadow_trail(alpha = 0.3, shape = 2)  # Restrict the shadow to 10 frames anim3 <- anim +   shadow_trail(max_frames = 10)"},{"path":"/reference/shadow_wake.html","id":null,"dir":"Reference","previous_headings":"","what":"Show preceding frames with gradual falloff — shadow_wake","title":"Show preceding frames with gradual falloff — shadow_wake","text":"shadow meant draw small wake data showing latest frames current. can choose gradually diminish size /opacity shadow. length wake given absolute frames make animation susceptible changes framerate. Instead given proportion total length animation.","code":""},{"path":"/reference/shadow_wake.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show preceding frames with gradual falloff — shadow_wake","text":"","code":"shadow_wake(   wake_length,   size = TRUE,   alpha = TRUE,   colour = NULL,   fill = NULL,   falloff = \"cubic-in\",   wrap = TRUE,   exclude_layer = NULL,   exclude_phase = c(\"enter\", \"exit\") )"},{"path":"/reference/shadow_wake.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show preceding frames with gradual falloff — shadow_wake","text":"wake_length number 0 1 giving length wake, relation total number frames. size Numeric indicating size wake end . NULL size modified. Can also boolean TRUE beeing equal 0 FALSE beeing equal NULL alpha size alpha modification wake colour, fill colour fill wake end . NULL modified. falloff easing function control size /alpha change. wrap shadow wrap around, first frame get shadows end animation. exclude_layer Indexes layers excluded. exclude_phase Element phases get shadow. Possible values 'enter', 'exit', 'static', 'transition', 'raw'. NULL phases included. Defaults 'enter' 'exit'","code":""},{"path":[]},{"path":"/reference/shadow_wake.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show preceding frames with gradual falloff — shadow_wake","text":"","code":"anim <- ggplot(iris, aes(Petal.Length, Sepal.Length)) +   geom_point() +   labs(title = \"{closest_state}\") +   transition_states(Species, transition_length = 4, state_length = 1)  # `shadow_wake` can be combined with e.g. `transition_states` to show # motion of geoms as they are in transition with respect to the selected state. anim1 <- anim +   shadow_wake(wake_length = 0.05)  # Different qualities can be manipulated by setting a value for it that it # should taper off to anim2 <- anim +   shadow_wake(0.1, size = 10, alpha = FALSE, colour = 'grey92')  # Use `detail` in the `animate()` call to increase the number of calculated # frames and thus make the wake smoother if (FALSE) { animate(anim2, detail = 5) }"},{"path":"/reference/split_animation.html","id":null,"dir":"Reference","previous_headings":"","what":"Split an animation into chunks — split_animation","title":"Split an animation into chunks — split_animation","text":"Sometimes interest split animation smaller chunks can orchestrated, e.g. presentation. function lets provide 'factor' split way base::split() though one evaluated context animations frame_vars() data, can split directly frame metadata.","code":""},{"path":"/reference/split_animation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split an animation into chunks — split_animation","text":"","code":"split_animation(animation = last_animation(), by)"},{"path":"/reference/split_animation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split an animation into chunks — split_animation","text":"animation animation extract metadata . Defaults last rendered animation unquoted expression evaluated context frame metadata. result must equal length number frames animation define grouping","code":""},{"path":"/reference/split_animation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split an animation into chunks — split_animation","text":"Depending output type renderer used produce animation. Often list elements referencing chunks animation. can saved individually.","code":""},{"path":"/reference/sprite_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap an image sprite for easy handling — sprite_file","title":"Wrap an image sprite for easy handling — sprite_file","text":"function equivalent gif_file() works animations encoded sprite. sprite single image file frame animation stacked next . animation happens changing slice image shown. implementation used allow users click animation order toggle pause/play.","code":""},{"path":"/reference/sprite_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap an image sprite for easy handling — sprite_file","text":"","code":"sprite_file(file, fps, width, full_width, height)  # S3 method for sprite_image print(x, width = NULL, ...)  knit_print.sprite_image(x, options, ...)"},{"path":"/reference/sprite_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap an image sprite for easy handling — sprite_file","text":"file png file frames placed horizontally fps framerate sprite animation width, height dimension single frame full_width width whole image x sprite_image object ... Arguments passed ","code":""},{"path":"/reference/sprite_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap an image sprite for easy handling — sprite_file","text":"sprite_file returns sprite_image object shallow wrapper around file path text string along dimensions fps used animating sprite printing.","code":""},{"path":"/reference/transition_components.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition individual components through their own lifecycle — transition_components","title":"Transition individual components through their own lifecycle — transition_components","text":"transition allows individual visual components define \"life-cycle\". means final animation common \"state\" \"transition\" phase component can moving static point time.","code":""},{"path":"/reference/transition_components.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition individual components through their own lifecycle — transition_components","text":"","code":"transition_components(   time,   range = NULL,   enter_length = NULL,   exit_length = NULL )"},{"path":"/reference/transition_components.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition individual components through their own lifecycle — transition_components","text":"time unquoted name column holding time state components range range animation span. Defaults range time plus enter exit length enter_length, exit_length long time spend enter exit transitions. Defaults 0","code":""},{"path":"/reference/transition_components.html","id":"label-variables","dir":"Reference","previous_headings":"","what":"Label variables","title":"Transition individual components through their own lifecycle — transition_components","text":"transition_components makes following variables available string literal interpretation, addition general ones provided animate(): frame_time gives time current frame corresponds ","code":""},{"path":"/reference/transition_components.html","id":"object-permanence","dir":"Reference","previous_headings":"","what":"Object permanence","title":"Transition individual components through their own lifecycle — transition_components","text":"transition_components uses group aesthetic layer identify rows input data correspond graphic element therefore define stages time element animate . group aesthetic, set, calculated interaction discrete aesthetics layer (excluding label), often better set explicitly animating, make sure data interpreted right way. group aesthetic set, discrete aesthetics exists rows group.","code":""},{"path":"/reference/transition_components.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed Variables","title":"Transition individual components through their own lifecycle — transition_components","text":"possible use variables calculated statistic define transition. Simply inclose variable stat() way using computed variables aesthetics.","code":""},{"path":[]},{"path":"/reference/transition_components.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transition individual components through their own lifecycle — transition_components","text":"","code":"data <- data.frame(   x = runif(10),   y = runif(10),   size = sample(1:3, 10, TRUE),   time = c(1, 4, 6, 7, 9, 6, 7, 8, 9, 10),   id = rep(1:2, each = 5) )  anim <- ggplot(data, aes(x, y, group = id, size = size)) +   geom_point() +   transition_components(time)  # By default the time range is set to the range of the time variable (plus # any enter and exit length), but this can be overwritten anim2 <- ggplot(data, aes(x, y, group = id, size = size)) +   geom_point() +   transition_components(time, range = c(4, 8))  # If you are using any enter/exit functions you need to give them some time anim3 <- ggplot(data, aes(x, y, group = id, size = size)) +   geom_point() +   transition_components(time, enter_length = 2, exit_length = 2) +   enter_grow() +   exit_fade()"},{"path":"/reference/transition_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition individual events in and out — transition_events","title":"Transition individual events in and out — transition_events","text":"transition treats visual element event time allows control duration enter/exit length individually event.","code":""},{"path":"/reference/transition_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition individual events in and out — transition_events","text":"","code":"transition_events(   start,   end = NULL,   range = NULL,   enter_length = NULL,   exit_length = NULL )"},{"path":"/reference/transition_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition individual events in and out — transition_events","text":"start, end unquoted expression giving start end time event. endis NULL event treated duration. range range animation span. Defaults range events enter exited. enter_length, exit_length unquoted expression giving length used enter exit event.","code":""},{"path":"/reference/transition_events.html","id":"label-variables","dir":"Reference","previous_headings":"","what":"Label variables","title":"Transition individual events in and out — transition_events","text":"transition_components makes following variables available string literal interpretation, addition general ones provided animate(): frame_time gives time current frame corresponds ","code":""},{"path":"/reference/transition_events.html","id":"object-permanence","dir":"Reference","previous_headings":"","what":"Object permanence","title":"Transition individual events in and out — transition_events","text":"transition_events link rows across data graphic element, elements defined uniquely row specific start, end, enter exit.","code":""},{"path":"/reference/transition_events.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed Variables","title":"Transition individual events in and out — transition_events","text":"possible use variables calculated statistic define transition. Simply inclose variable stat() way using computed variables aesthetics.","code":""},{"path":[]},{"path":"/reference/transition_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transition individual events in and out — transition_events","text":"","code":"data <- data.frame(   x = 1:10,   y = runif(10),   begin = runif(10, 1, 100),   length = runif(10, 5, 20),   enter = runif(10, 5, 10),   exit = runif(10, 5, 10) )  anim <- ggplot(data, aes(x, y)) +   geom_col() +   transition_events(start = begin,                     end = begin + length,                     enter_length = enter,                     exit_length = exit) +  enter_grow() +  exit_drift(x_mod = 11) +  exit_fade()"},{"path":"/reference/transition_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition between different filters — transition_filter","title":"Transition between different filters — transition_filter","text":"transition allows transition range filtering conditions. conditions expressed logical statements rows data retained statement evaluates TRUE. possible keep filtered data display setting keep = TRUE let data retained result exit function. Note data kept enter function effect.","code":""},{"path":"/reference/transition_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition between different filters — transition_filter","text":"","code":"transition_filter(   transition_length = 1,   filter_length = 1,   ...,   wrap = TRUE,   keep = FALSE )"},{"path":"/reference/transition_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition between different filters — transition_filter","text":"transition_length relative length transition. recycled match number states data filter_length relative length pause states. recycled match number states data ... number expressions evaluated context layer data, returning logical vector. expressions named, name available frame variable. wrap animation wrap-around? TRUE last filter transitioned first. keep rows evaluates FALSE kept data looks exit applied","code":""},{"path":"/reference/transition_filter.html","id":"label-variables","dir":"Reference","previous_headings":"","what":"Label variables","title":"Transition between different filters — transition_filter","text":"transition_filter makes following variables available string literal interpretation, addition general ones provided animate(): transitioning boolean indicating whether frame part transitioning phase previous_filter name last filter animation closest_filter name filter closest frame next_filter name next filter animation part previous_expression expression last filter animation closest_expression expression filter closest frame next_expression expression next filter animation part ","code":""},{"path":"/reference/transition_filter.html","id":"object-permanence","dir":"Reference","previous_headings":"","what":"Object permanence","title":"Transition between different filters — transition_filter","text":"transition_filter link rows across data graphic element, elements defined uniquely row. keep = TRUE rows matching conditions filter removed plot exit animation, possible subsequent enter begin state left , rather enter anew state defined enter function.","code":""},{"path":"/reference/transition_filter.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed Variables","title":"Transition between different filters — transition_filter","text":"possible use variables calculated statistic define transition. Simply inclose variable stat() way using computed variables aesthetics.","code":""},{"path":[]},{"path":"/reference/transition_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transition between different filters — transition_filter","text":"","code":"anim <- ggplot(iris, aes(Petal.Width, Petal.Length, colour = Species)) +   geom_point() +   transition_filter(     transition_length = 2,     filter_length = 1,     Setosa = Species == 'setosa',     Long = Petal.Length > 4,     Wide = Petal.Width > 2   ) +   ggtitle(     'Filter: {closest_filter}',     subtitle = '{closest_expression}'   ) +   enter_fade() +   exit_fly(y_loc = 0)  # Setting `keep = TRUE` allows you to keep the culled data on display. Only # exit functions will be used in that case (as elements enters from the # result of the exit function) anim2 <- ggplot(iris, aes(Petal.Width, Petal.Length, colour = Species)) +   geom_point() +   transition_filter(     transition_length = 2,     filter_length = 1,     Setosa = Species == 'setosa',     Long = Petal.Length > 4,     Wide = Petal.Width > 2,     keep = TRUE   ) +   ggtitle(     'Filter: {closest_filter}',     subtitle = '{closest_expression}'   ) +   exit_recolour(colour = 'grey') +   exit_shrink(size = 0.5)"},{"path":"/reference/transition_layers.html","id":null,"dir":"Reference","previous_headings":"","what":"Build up a plot, layer by layer — transition_layers","title":"Build up a plot, layer by layer — transition_layers","text":"transition gradually adds layers plot order defined. default prior layers kept remainder animation, can also set removed next layer enters.","code":""},{"path":"/reference/transition_layers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build up a plot, layer by layer — transition_layers","text":"","code":"transition_layers(   layer_length = 1,   transition_length = 1,   keep_layers = TRUE,   from_blank = TRUE,   layer_order = NULL,   layer_names = NULL )"},{"path":"/reference/transition_layers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build up a plot, layer by layer — transition_layers","text":"layer_length proportional time pause layer new one enters transition_length proportional time use entrance new layer keep_layers Either integer indicating many following layers layers stay screen logical. case later, TRUE mean keep layer remainder animation (equivalent setting Inf) FALSE mean transition layer next layer enters. from_blank first layer transition present onset animation layer_order alternative order layers appear (default using stacking order). arguments references layers index way refers order. layer_names character vector names layers, used interpreting label literals","code":""},{"path":"/reference/transition_layers.html","id":"label-variables","dir":"Reference","previous_headings":"","what":"Label variables","title":"Build up a plot, layer by layer — transition_layers","text":"transition_layers makes following variables available string literal interpretation, addition general ones provided animate(): transitioning boolean indicating whether frame part transitioning phase previous_layer name last layer animation showing closest_layer name layer animation closest showing next_layer name next layer animation show nlayers total number layers","code":""},{"path":"/reference/transition_layers.html","id":"object-permanence","dir":"Reference","previous_headings":"","what":"Object permanence","title":"Build up a plot, layer by layer — transition_layers","text":"transition_layer link rows across data graphic element, elements defined uniquely row enter exit layer belongs .","code":""},{"path":[]},{"path":"/reference/transition_layers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build up a plot, layer by layer — transition_layers","text":"","code":"# Default is to use layer order and keep layers for duration of animation anim <- ggplot(mtcars, aes(mpg, disp)) +   geom_point() +   geom_smooth(colour = 'grey', se = FALSE) +   geom_smooth(aes(colour = factor(gear))) +   transition_layers(layer_length = 1, transition_length = 2) +   enter_fade() + enter_grow()  # Start with the first layer already present anim1 <- ggplot(mtcars, aes(mpg, disp)) +   geom_point() +   geom_smooth(colour = 'grey', se = FALSE) +   geom_smooth(aes(colour = factor(gear))) +   transition_layers(layer_length = 1, transition_length = 2,                     from_blank = FALSE) +   enter_fade() + enter_grow()  # Change the order of the layers anim2 <- ggplot(mtcars, aes(mpg, disp)) +   geom_point() +   geom_smooth(colour = 'grey', se = FALSE) +   geom_smooth(aes(colour = factor(gear))) +   transition_layers(layer_length = 1, transition_length = 2,                     from_blank = FALSE, layer_order = c(3, 1, 2)) +   enter_fade() + enter_grow()  # Keep layer 1 for the whole animation, but remove the 2nd layer as the 3rd # enters anim3 <- ggplot(mtcars, aes(mpg, disp)) +   geom_point() +   geom_smooth(colour = 'grey', se = FALSE) +   geom_smooth(aes(colour = factor(gear))) +   transition_layers(layer_length = 1, transition_length = 2,                     from_blank = FALSE, keep_layers = c(Inf, 0, 0)) +   enter_fade() + enter_grow() +   exit_fade() + exit_shrink()"},{"path":"/reference/transition_manual.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an animation by specifying the frame membership directly — transition_manual","title":"Create an animation by specifying the frame membership directly — transition_manual","text":"transition allows map variable data specific frame animation. tweening data made number frames animation decided number levels frame variable.","code":""},{"path":"/reference/transition_manual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an animation by specifying the frame membership directly — transition_manual","text":"","code":"transition_manual(frames, ..., cumulative = FALSE)"},{"path":"/reference/transition_manual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an animation by specifying the frame membership directly — transition_manual","text":"frames unquoted name column holding frame membership. ... Additional variables cumulative Keep data previous frames part current frame data","code":""},{"path":"/reference/transition_manual.html","id":"label-variables","dir":"Reference","previous_headings":"","what":"Label variables","title":"Create an animation by specifying the frame membership directly — transition_manual","text":"transition_states makes following variables available string literal interpretation, addition general ones provided animate(): previous_frame name last frame animation current_frame name current frame next_frame name next frame animation","code":""},{"path":"/reference/transition_manual.html","id":"object-permanence","dir":"Reference","previous_headings":"","what":"Object permanence","title":"Create an animation by specifying the frame membership directly — transition_manual","text":"transition_manual link rows across data graphic element. Every frame discrete state animation states done.","code":""},{"path":"/reference/transition_manual.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed Variables","title":"Create an animation by specifying the frame membership directly — transition_manual","text":"possible use variables calculated statistic define transition. Simply inclose variable stat() way using computed variables aesthetics.","code":""},{"path":[]},{"path":"/reference/transition_manual.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an animation by specifying the frame membership directly — transition_manual","text":"","code":"anim <- ggplot(mtcars, aes(factor(gear), mpg)) +   geom_boxplot() +   transition_manual(gear)  # Using `cumulative = TRUE` to keep data from older frames anim2 <- ggplot(mtcars, aes(factor(gear), mpg)) +   geom_boxplot() +   transition_manual(gear, cumulative = TRUE)  # Use `factor()` to set the order of the frames anim3 <- ggplot(mtcars, aes(factor(gear), mpg)) +   geom_boxplot() +   transition_manual(factor(gear, levels = c('4', '3', '5')))"},{"path":"/reference/transition_null.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep all data constant across the animation — transition_null","title":"Keep all data constant across the animation — transition_null","text":"Keep data constant across animation","code":""},{"path":"/reference/transition_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep all data constant across the animation — transition_null","text":"","code":"transition_null()"},{"path":[]},{"path":"/reference/transition_reveal.html","id":null,"dir":"Reference","previous_headings":"","what":"Reveal data along a given dimension — transition_reveal","title":"Reveal data along a given dimension — transition_reveal","text":"transition allows let data gradually appear, based given time dimension. contrast e.g. transition_time() transition_reveal() calculates intermediary values exact positions instead coercing raw values closest frame. keeps old data path polygon type layers gradually build instead set disconnected segments happen using transition_time() shadow_mark() together.","code":""},{"path":"/reference/transition_reveal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reveal data along a given dimension — transition_reveal","text":"","code":"transition_reveal(along, range = NULL, keep_last = TRUE)"},{"path":"/reference/transition_reveal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reveal data along a given dimension — transition_reveal","text":"along unquoted expression giving dimension tween along. gradually revealing time series set x aesthetic. range time range animate. NULL set range along keep_last non-path/polygon layers last row kept subsequent frames.","code":""},{"path":"/reference/transition_reveal.html","id":"label-variables","dir":"Reference","previous_headings":"","what":"Label variables","title":"Reveal data along a given dimension — transition_reveal","text":"transition_reveal makes following variables available string literal interpretation, addition general ones provided animate(): frame_along gives position along-dimension current frame corresponds ","code":""},{"path":"/reference/transition_reveal.html","id":"object-permanence","dir":"Reference","previous_headings":"","what":"Object permanence","title":"Reveal data along a given dimension — transition_reveal","text":"transition_reveal uses group aesthetic layer identify rows input data correspond graphic element therefore define whole revealed animation. group aesthetic, set, calculated interaction discrete aesthetics layer (excluding label), often better set explicitly animating, make sure data interpreted right way. group aesthetic set, discrete aesthetics exists rows group.","code":""},{"path":"/reference/transition_reveal.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed Variables","title":"Reveal data along a given dimension — transition_reveal","text":"possible use variables calculated statistic define transition. Simply inclose variable stat() way using computed variables aesthetics.","code":""},{"path":[]},{"path":"/reference/transition_reveal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reveal data along a given dimension — transition_reveal","text":"","code":"anim <- ggplot(airquality, aes(Day, Temp, group = Month)) +   geom_line() +   transition_reveal(Day)  # Non-paths will only show the current position, not the history anim1 <- ggplot(airquality, aes(Day, Temp, group = Month)) +   geom_line() +   geom_point(colour = 'red', size = 3) +   transition_reveal(Day)  # Points can be kept by giving them a unique group and set `keep = TRUE` (the # default) anim2 <- ggplot(airquality, aes(Day, Temp, group = Month)) +   geom_line() +   geom_point(aes(group = seq_along(Day))) +   geom_point(colour = 'red', size = 3) +   transition_reveal(Day)  # Since ggplot2 3.4 geom_ribbon and geom_area has used stat_align # This stat is incompatible with transition_reveal when applied before # stats are calculated anim3 <- ggplot(airquality, aes(Day, Temp, group = Month)) +   geom_area() +   transition_reveal(Day)  try(anim) #> `geom_line()`: Each group consists of only one observation. #> ℹ Do you need to adjust the group aesthetic? #> `geom_line()`: Each group consists of only one observation. #> ℹ Do you need to adjust the group aesthetic? #> Warning: file_renderer failed to copy frames to the destination directory #>   [1] \"./gganim_plot0001.png\" \"./gganim_plot0002.png\" \"./gganim_plot0003.png\" #>   [4] \"./gganim_plot0004.png\" \"./gganim_plot0005.png\" \"./gganim_plot0006.png\" #>   [7] \"./gganim_plot0007.png\" \"./gganim_plot0008.png\" \"./gganim_plot0009.png\" #>  [10] \"./gganim_plot0010.png\" \"./gganim_plot0011.png\" \"./gganim_plot0012.png\" #>  [13] \"./gganim_plot0013.png\" \"./gganim_plot0014.png\" \"./gganim_plot0015.png\" #>  [16] \"./gganim_plot0016.png\" \"./gganim_plot0017.png\" \"./gganim_plot0018.png\" #>  [19] \"./gganim_plot0019.png\" \"./gganim_plot0020.png\" \"./gganim_plot0021.png\" #>  [22] \"./gganim_plot0022.png\" \"./gganim_plot0023.png\" \"./gganim_plot0024.png\" #>  [25] \"./gganim_plot0025.png\" \"./gganim_plot0026.png\" \"./gganim_plot0027.png\" #>  [28] \"./gganim_plot0028.png\" \"./gganim_plot0029.png\" \"./gganim_plot0030.png\" #>  [31] \"./gganim_plot0031.png\" \"./gganim_plot0032.png\" \"./gganim_plot0033.png\" #>  [34] \"./gganim_plot0034.png\" \"./gganim_plot0035.png\" \"./gganim_plot0036.png\" #>  [37] \"./gganim_plot0037.png\" \"./gganim_plot0038.png\" \"./gganim_plot0039.png\" #>  [40] \"./gganim_plot0040.png\" \"./gganim_plot0041.png\" \"./gganim_plot0042.png\" #>  [43] \"./gganim_plot0043.png\" \"./gganim_plot0044.png\" \"./gganim_plot0045.png\" #>  [46] \"./gganim_plot0046.png\" \"./gganim_plot0047.png\" \"./gganim_plot0048.png\" #>  [49] \"./gganim_plot0049.png\" \"./gganim_plot0050.png\" \"./gganim_plot0051.png\" #>  [52] \"./gganim_plot0052.png\" \"./gganim_plot0053.png\" \"./gganim_plot0054.png\" #>  [55] \"./gganim_plot0055.png\" \"./gganim_plot0056.png\" \"./gganim_plot0057.png\" #>  [58] \"./gganim_plot0058.png\" \"./gganim_plot0059.png\" \"./gganim_plot0060.png\" #>  [61] \"./gganim_plot0061.png\" \"./gganim_plot0062.png\" \"./gganim_plot0063.png\" #>  [64] \"./gganim_plot0064.png\" \"./gganim_plot0065.png\" \"./gganim_plot0066.png\" #>  [67] \"./gganim_plot0067.png\" \"./gganim_plot0068.png\" \"./gganim_plot0069.png\" #>  [70] \"./gganim_plot0070.png\" \"./gganim_plot0071.png\" \"./gganim_plot0072.png\" #>  [73] \"./gganim_plot0073.png\" \"./gganim_plot0074.png\" \"./gganim_plot0075.png\" #>  [76] \"./gganim_plot0076.png\" \"./gganim_plot0077.png\" \"./gganim_plot0078.png\" #>  [79] \"./gganim_plot0079.png\" \"./gganim_plot0080.png\" \"./gganim_plot0081.png\" #>  [82] \"./gganim_plot0082.png\" \"./gganim_plot0083.png\" \"./gganim_plot0084.png\" #>  [85] \"./gganim_plot0085.png\" \"./gganim_plot0086.png\" \"./gganim_plot0087.png\" #>  [88] \"./gganim_plot0088.png\" \"./gganim_plot0089.png\" \"./gganim_plot0090.png\" #>  [91] \"./gganim_plot0091.png\" \"./gganim_plot0092.png\" \"./gganim_plot0093.png\" #>  [94] \"./gganim_plot0094.png\" \"./gganim_plot0095.png\" \"./gganim_plot0096.png\" #>  [97] \"./gganim_plot0097.png\" \"./gganim_plot0098.png\" \"./gganim_plot0099.png\" #> [100] \"./gganim_plot0100.png\" #> attr(,\"frame_vars\") #>     frame nframes progress frame_along #> 1       1     100     0.01           1 #> 2       2     100     0.02           1 #> 3       3     100     0.03           2 #> 4       4     100     0.04           2 #> 5       5     100     0.05           2 #> 6       6     100     0.06           3 #> 7       7     100     0.07           3 #> 8       8     100     0.08           3 #> 9       9     100     0.09           3 #> 10     10     100     0.10           4 #> 11     11     100     0.11           4 #> 12     12     100     0.12           4 #> 13     13     100     0.13           5 #> 14     14     100     0.14           5 #> 15     15     100     0.15           5 #> 16     16     100     0.16           6 #> 17     17     100     0.17           6 #> 18     18     100     0.18           6 #> 19     19     100     0.19           6 #> 20     20     100     0.20           7 #> 21     21     100     0.21           7 #> 22     22     100     0.22           7 #> 23     23     100     0.23           8 #> 24     24     100     0.24           8 #> 25     25     100     0.25           8 #> 26     26     100     0.26           9 #> 27     27     100     0.27           9 #> 28     28     100     0.28           9 #> 29     29     100     0.29           9 #> 30     30     100     0.30          10 #> 31     31     100     0.31          10 #> 32     32     100     0.32          10 #> 33     33     100     0.33          11 #> 34     34     100     0.34          11 #> 35     35     100     0.35          11 #> 36     36     100     0.36          12 #> 37     37     100     0.37          12 #> 38     38     100     0.38          12 #> 39     39     100     0.39          13 #> 40     40     100     0.40          13 #> 41     41     100     0.41          13 #> 42     42     100     0.42          13 #> 43     43     100     0.43          14 #> 44     44     100     0.44          14 #> 45     45     100     0.45          14 #> 46     46     100     0.46          15 #> 47     47     100     0.47          15 #> 48     48     100     0.48          15 #> 49     49     100     0.49          16 #> 50     50     100     0.50          16 #> 51     51     100     0.51          16 #> 52     52     100     0.52          16 #> 53     53     100     0.53          17 #> 54     54     100     0.54          17 #> 55     55     100     0.55          17 #> 56     56     100     0.56          18 #> 57     57     100     0.57          18 #> 58     58     100     0.58          18 #> 59     59     100     0.59          19 #> 60     60     100     0.60          19 #> 61     61     100     0.61          19 #> 62     62     100     0.62          19 #> 63     63     100     0.63          20 #> 64     64     100     0.64          20 #> 65     65     100     0.65          20 #> 66     66     100     0.66          21 #> 67     67     100     0.67          21 #> 68     68     100     0.68          21 #> 69     69     100     0.69          22 #> 70     70     100     0.70          22 #> 71     71     100     0.71          22 #> 72     72     100     0.72          23 #> 73     73     100     0.73          23 #> 74     74     100     0.74          23 #> 75     75     100     0.75          23 #> 76     76     100     0.76          24 #> 77     77     100     0.77          24 #> 78     78     100     0.78          24 #> 79     79     100     0.79          25 #> 80     80     100     0.80          25 #> 81     81     100     0.81          25 #> 82     82     100     0.82          26 #> 83     83     100     0.83          26 #> 84     84     100     0.84          26 #> 85     85     100     0.85          26 #> 86     86     100     0.86          27 #> 87     87     100     0.87          27 #> 88     88     100     0.88          27 #> 89     89     100     0.89          28 #> 90     90     100     0.90          28 #> 91     91     100     0.91          28 #> 92     92     100     0.92          29 #> 93     93     100     0.93          29 #> 94     94     100     0.94          29 #> 95     95     100     0.95          29 #> 96     96     100     0.96          30 #> 97     97     100     0.97          30 #> 98     98     100     0.98          30 #> 99     99     100     0.99          31 #> 100   100     100     1.00          31 #>                                                                                      frame_source #> 1   /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0001.png #> 2   /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0002.png #> 3   /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0003.png #> 4   /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0004.png #> 5   /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0005.png #> 6   /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0006.png #> 7   /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0007.png #> 8   /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0008.png #> 9   /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0009.png #> 10  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0010.png #> 11  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0011.png #> 12  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0012.png #> 13  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0013.png #> 14  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0014.png #> 15  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0015.png #> 16  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0016.png #> 17  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0017.png #> 18  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0018.png #> 19  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0019.png #> 20  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0020.png #> 21  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0021.png #> 22  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0022.png #> 23  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0023.png #> 24  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0024.png #> 25  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0025.png #> 26  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0026.png #> 27  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0027.png #> 28  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0028.png #> 29  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0029.png #> 30  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0030.png #> 31  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0031.png #> 32  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0032.png #> 33  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0033.png #> 34  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0034.png #> 35  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0035.png #> 36  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0036.png #> 37  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0037.png #> 38  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0038.png #> 39  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0039.png #> 40  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0040.png #> 41  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0041.png #> 42  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0042.png #> 43  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0043.png #> 44  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0044.png #> 45  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0045.png #> 46  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0046.png #> 47  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0047.png #> 48  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0048.png #> 49  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0049.png #> 50  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0050.png #> 51  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0051.png #> 52  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0052.png #> 53  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0053.png #> 54  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0054.png #> 55  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0055.png #> 56  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0056.png #> 57  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0057.png #> 58  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0058.png #> 59  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0059.png #> 60  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0060.png #> 61  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0061.png #> 62  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0062.png #> 63  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0063.png #> 64  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0064.png #> 65  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0065.png #> 66  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0066.png #> 67  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0067.png #> 68  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0068.png #> 69  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0069.png #> 70  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0070.png #> 71  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0071.png #> 72  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0072.png #> 73  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0073.png #> 74  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0074.png #> 75  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0075.png #> 76  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0076.png #> 77  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0077.png #> 78  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0078.png #> 79  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0079.png #> 80  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0080.png #> 81  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0081.png #> 82  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0082.png #> 83  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0083.png #> 84  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0084.png #> 85  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0085.png #> 86  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0086.png #> 87  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0087.png #> 88  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0088.png #> 89  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0089.png #> 90  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0090.png #> 91  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0091.png #> 92  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0092.png #> 93  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0093.png #> 94  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0094.png #> 95  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0095.png #> 96  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0096.png #> 97  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0097.png #> 98  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0098.png #> 99  /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0099.png #> 100 /var/folders/vf/26qwsl_96t9_5wncr5xbwxpw0000gn/T//Rtmpq4EHOD/43101c41bf73/gganim_plot0100.png  # This can be fixed by either reverting to use stat_identity anim4 <- ggplot(airquality, aes(Day, Temp, group = Month)) +   geom_area(stat = \"identity\") +   transition_reveal(Day)  # Or by applying the transition after the stat anim5 <- ggplot(airquality, aes(Day, Temp, group = Month)) +   geom_area() +   transition_reveal(after_stat(x))"},{"path":"/reference/transition_states.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition between several distinct stages of the data — transition_states","title":"Transition between several distinct stages of the data — transition_states","text":"transition splits data multiple states based levels given column, much like ggplot2::facet_wrap() splits data multiple panels. tweens defined states pauses state. Layers data without specified column kept constant animation (, mimicking facet_wrap).","code":""},{"path":"/reference/transition_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition between several distinct stages of the data — transition_states","text":"","code":"transition_states(states, transition_length = 1, state_length = 1, wrap = TRUE)"},{"path":"/reference/transition_states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition between several distinct stages of the data — transition_states","text":"states unquoted name column holding state levels data. transition_length relative length transition. recycled match number states data state_length relative length pause states. recycled match number states data wrap animation wrap-around? TRUE last state transitioned first.","code":""},{"path":"/reference/transition_states.html","id":"label-variables","dir":"Reference","previous_headings":"","what":"Label variables","title":"Transition between several distinct stages of the data — transition_states","text":"transition_states makes following variables available string literal interpretation, addition general ones provided animate(): transitioning boolean indicating whether frame part transitioning phase previous_state name last state animation closest_state name state closest frame next_state name next state animation part ","code":""},{"path":"/reference/transition_states.html","id":"object-permanence","dir":"Reference","previous_headings":"","what":"Object permanence","title":"Transition between several distinct stages of the data — transition_states","text":"transition_states uses group aesthetic layer identify rows input data correspond graphic element therefore define elements turn states. group aesthetic, set, calculated interaction discrete aesthetics layer (excluding label), often better set explicitly animating, make sure data interpreted right way. group aesthetic set, discrete aesthetics exists rows group. group aesthetic unique state, rows matched first group index. Unmatched rows appear/disappear, potentially using enter exit function.","code":""},{"path":"/reference/transition_states.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed Variables","title":"Transition between several distinct stages of the data — transition_states","text":"possible use variables calculated statistic define transition. Simply inclose variable stat() way using computed variables aesthetics.","code":""},{"path":[]},{"path":"/reference/transition_states.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transition between several distinct stages of the data — transition_states","text":"","code":"anim <- ggplot(iris, aes(Sepal.Width, Petal.Width)) +   geom_point() +   labs(title = \"{closest_state}\") +   transition_states(Species, transition_length = 3, state_length = 1)  # Use a unique group to avoid matching graphic elements iris$group <- seq_len(nrow(iris)) anim1 <- ggplot(iris, aes(Sepal.Width, Petal.Width, group = group)) +   geom_point() +   labs(title = \"{closest_state}\") +   transition_states(Species, transition_length = 3, state_length = 1) +   enter_fade() +   exit_fade()  # Set `wrap = FALSE` to avoid transitioning the last state to the first anim2 <- ggplot(iris, aes(Sepal.Width, Petal.Width)) +   geom_point() +   labs(title = \"{closest_state}\") +   transition_states(Species, transition_length = 3, state_length = 1,                     wrap = FALSE)"},{"path":"/reference/transition_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Transition through distinct states in time — transition_time","title":"Transition through distinct states in time — transition_time","text":"variant transition_states() intended data states representing specific point time. transition length states set correspond actual time difference .","code":""},{"path":"/reference/transition_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transition through distinct states in time — transition_time","text":"","code":"transition_time(time, range = NULL)"},{"path":"/reference/transition_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transition through distinct states in time — transition_time","text":"time unquoted expression giving time, thus state membership, observation. range time range animate. NULL set range time","code":""},{"path":"/reference/transition_time.html","id":"label-variables","dir":"Reference","previous_headings":"","what":"Label variables","title":"Transition through distinct states in time — transition_time","text":"transition_time makes following variables available string literal interpretation, addition general ones provided animate(): frame_time gives time current frame corresponds ","code":""},{"path":"/reference/transition_time.html","id":"object-permanence","dir":"Reference","previous_headings":"","what":"Object permanence","title":"Transition through distinct states in time — transition_time","text":"transition_time uses group aesthetic layer identify rows input data correspond graphic element therefore define elements turn time points. group aesthetic, set, calculated interaction discrete aesthetics layer (excluding label), often better set explicitly animating, make sure data interpreted right way. group aesthetic set, discrete aesthetics exists rows group. group aesthetic unique state, rows matched first group index. Unmatched rows appear/disappear, potentially using enter exit function.","code":""},{"path":"/reference/transition_time.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed Variables","title":"Transition through distinct states in time — transition_time","text":"possible use variables calculated statistic define transition. Simply inclose variable stat() way using computed variables aesthetics.","code":""},{"path":[]},{"path":"/reference/transition_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transition through distinct states in time — transition_time","text":"","code":"anim <- ggplot(airquality, aes(Day, Temp)) +   geom_point(aes(colour = factor(Month))) +   transition_time(Day)  # Removing a time point will prolong the tweening between neighbouring time # points so the time dimension stays linear airquality_missing <- airquality[airquality$Day <= 10 | airquality$Day >= 20, ] anim1 <- ggplot(airquality_missing, aes(Day, Temp)) +   geom_point(aes(colour = factor(Month))) +   transition_time(Day)  # Range can be constrained if needed anim2 <- ggplot(airquality, aes(Day, Temp)) +   geom_point(aes(colour = factor(Month))) +   transition_time(Day, range = c(10L, 20L))  # The group aesthetic is used to connect elements # No grouping anim3 <- ggplot(airquality, aes(Day, Temp)) +   geom_line() +   transition_time(Month)  # Group by month anim4 <- ggplot(airquality, aes(Day, Temp)) +   geom_line(aes(group = Month)) +   transition_time(Month) +   enter_fade() +   exit_fade()"},{"path":"/reference/tween_before_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Define if layers should be tweened before stats are calculated — tween_before_stat","title":"Define if layers should be tweened before stats are calculated — tween_before_stat","text":"Define layers tweened stats calculated","code":""},{"path":"/reference/tween_before_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define if layers should be tweened before stats are calculated — tween_before_stat","text":"","code":"tween_before_stat(x)"},{"path":"/reference/tween_before_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define if layers should be tweened before stats are calculated — tween_before_stat","text":"x Layer, Geom, Stat","code":""},{"path":"/reference/video_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap a video file for easy handling — video_file","title":"Wrap a video file for easy handling — video_file","text":"function equivalent gif_file() works arbitrary video file formats. caveats involved though, notably currently supports splitting easily use output together split_animation(). Graceful printing contingent file format. mp4, webm, ogg supported HTML format can thus shown RStudio viewer inside HTML documents created knitr. formats opened default OS-specific viewer.","code":""},{"path":"/reference/video_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap a video file for easy handling — video_file","text":"","code":"video_file(file)  # S3 method for video_file print(x, width = NULL, ...)  knit_print.video_file(x, options, ...)"},{"path":"/reference/video_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap a video file for easy handling — video_file","text":"file video file x video_file object width width output scaled ... Arguments passed ","code":""},{"path":"/reference/video_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap a video file for easy handling — video_file","text":"video_file returns video_file object shallow wrapper around file path text string.","code":""},{"path":"/reference/view_follow.html","id":null,"dir":"Reference","previous_headings":"","what":"Let the view follow the data in each frame — view_follow","title":"Let the view follow the data in each frame — view_follow","text":"view set panels include data present frame.","code":""},{"path":"/reference/view_follow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Let the view follow the data in each frame — view_follow","text":"","code":"view_follow(   fixed_x = FALSE,   fixed_y = FALSE,   exclude_layer = NULL,   aspect_ratio = 1 )"},{"path":"/reference/view_follow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Let the view follow the data in each frame — view_follow","text":"fixed_x, fixed_y Either logical indicating dimension modified view, numeric vector giving lower upper bounds dimension. latter, NA value substituted whatever calculated view (e.g. fixed_x = c(0, NA)) fix minimum x value 0 let view calculate upper bound. exclude_layer Integer vector layer indices ignored calculating view aspect_ratio coord fixed, ensure view matches given aspect ratio. override anything given fixed_x/fixed_y","code":""},{"path":[]},{"path":"/reference/view_follow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Let the view follow the data in each frame — view_follow","text":"","code":"anim <- ggplot(iris, aes(Sepal.Length, Sepal.Width)) +   geom_point() +   labs(title = \"{closest_state}\") +   transition_states(Species, transition_length = 4, state_length = 1) +   view_follow()  # Fixing a dimension can be done in general anim1 <- ggplot(iris, aes(Sepal.Length, Sepal.Width)) +   geom_point() +   labs(title = \"{closest_state}\") +   transition_states(Species, transition_length = 4, state_length = 1) +   view_follow(fixed_x = TRUE)  # ...or just for one side of the range anim1 <- ggplot(iris, aes(Sepal.Length, Sepal.Width)) +   geom_point() +   labs(title = \"{closest_state}\") +   transition_states(Species, transition_length = 4, state_length = 1) +   view_follow(fixed_x = c(4, NA), fixed_y = c(2, NA))"},{"path":"/reference/view_static.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep a fixed view that include all of the data — view_static","title":"Keep a fixed view that include all of the data — view_static","text":"view keeps positional scales fixed across frames","code":""},{"path":"/reference/view_static.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep a fixed view that include all of the data — view_static","text":"","code":"view_static()"},{"path":[]},{"path":"/reference/view_step.html","id":null,"dir":"Reference","previous_headings":"","what":"Follow the data in steps — view_step","title":"Follow the data in steps — view_step","text":"view bit like view_follow() match data frame. Instead switch static zoom range data. great pairing transition_states() can move view data static static data moves. standard version look data present calculated frames set ranges based , _manual version allow define ranges.","code":""},{"path":"/reference/view_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Follow the data in steps — view_step","text":"","code":"view_step(   pause_length = 1,   step_length = 1,   nsteps = NULL,   look_ahead = pause_length,   delay = 0,   include = TRUE,   ease = \"cubic-in-out\",   wrap = TRUE,   pause_first = FALSE,   fixed_x = FALSE,   fixed_y = FALSE,   exclude_layer = NULL,   aspect_ratio = 1 )  view_step_manual(   pause_length = 1,   step_length = 1,   xmin,   xmax,   ymin,   ymax,   delay = 0,   ease = \"cubic-in-out\",   wrap = TRUE,   pause_first = FALSE,   fixed_x = FALSE,   fixed_y = FALSE,   exclude_layer = NULL,   aspect_ratio = 1 )"},{"path":"/reference/view_step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Follow the data in steps — view_step","text":"pause_length relative length view kept static. recycled match number steps step_length relative length view use transition new position. recycled match number steps nsteps number steps. NULL set max length pause_length step_length look_ahead relative length look ahead animation get new zoom area. Allow view zoom data delay relative length switch view back forth relative actual frames. E.g. delay calculated 5 frames, frame 6 get view intended frame 1. include steps include start end frame range ease easing function used step wrap transition_states(). view wrap around zoom back first state. pause_first view start pause. default start step aligned static period transition_states() fixed_x, fixed_y Either logical indicating dimension modified view, numeric vector giving lower upper bounds dimension. latter, NA value substituted whatever calculated view (e.g. fixed_x = c(0, NA)) fix minimum x value 0 let view calculate upper bound. exclude_layer Integer vector layer indices ignored calculating view aspect_ratio coord fixed, ensure view matches given aspect ratio. override anything given fixed_x/fixed_y xmin, xmax, ymin, ymax Vectors even length defining boundaries different views go ","code":""},{"path":[]},{"path":"/reference/view_step.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Follow the data in steps — view_step","text":"","code":"anim <- ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_point() +   transition_states(Species, transition_length = 2, state_length = 1) +   view_step(pause_length = 2, step_length = 1, nsteps = 3)  # Default is to include the data from the two states you're stepping between # but this can be turned off anim <- ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_point() +   transition_states(Species, transition_length = 2, state_length = 1) +   view_step(pause_length = 2, step_length = 1, nsteps = 3, include = FALSE)  # Default is to work off-beat of transition_states so that view changes while # data is static. Setting pause_first=TRUE changes this anim <- ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_point() +   transition_states(Species, transition_length = 2, state_length = 1) +   view_step(pause_length = 1, step_length = 2, nsteps = 3, pause_first = TRUE)  # If the transition doesn't wrap, then the view shouldn't either anim <- ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_point() +   transition_states(Species, transition_length = 2, state_length = 1, wrap = FALSE) +   view_step(pause_length = 2, step_length = 1, nsteps = 3, wrap = FALSE)"},{"path":"/reference/view_zoom.html","id":null,"dir":"Reference","previous_headings":"","what":"Pan and zoom smoothly between different states — view_zoom","title":"Pan and zoom smoothly between different states — view_zoom","text":"view many ways equivalent view_step() view_step_manual() instead simply tweening bounding box view implement smooth zoom pan technique developed Reach & North (2018). gradually zooms pan allow smooth transition view. view_step() standard version look data present calculated frames set ranges based , _manual version allow define ranges zoom .","code":""},{"path":"/reference/view_zoom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pan and zoom smoothly between different states — view_zoom","text":"","code":"view_zoom(   pause_length = 1,   step_length = 1,   nsteps = NULL,   look_ahead = 0,   delay = 0,   include = FALSE,   pan_zoom = 0,   ease = \"sine-in-out\",   wrap = TRUE,   pause_first = TRUE,   fixed_x = FALSE,   fixed_y = FALSE,   exclude_layer = NULL,   aspect_ratio = 1 )  view_zoom_manual(   pause_length = 1,   step_length = 1,   xmin,   xmax,   ymin,   ymax,   delay = 0,   pan_zoom = 0,   ease = \"sine-in-out\",   wrap = TRUE,   pause_first = TRUE,   fixed_x = FALSE,   fixed_y = FALSE,   exclude_layer = NULL,   aspect_ratio = 1 )"},{"path":"/reference/view_zoom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pan and zoom smoothly between different states — view_zoom","text":"pause_length relative length view kept static. recycled match number steps step_length relative length view use transition new position. recycled match number steps nsteps number steps. NULL set max length pause_length step_length look_ahead relative length look ahead animation get new zoom area. Allow view zoom data delay relative length switch view back forth relative actual frames. E.g. delay calculated 5 frames, frame 6 get view intended frame 1. include steps include start end frame range pan_zoom tradeoff pan- zoom-induced movement. Negative values value zoom pan positive values value pan zoom ease easing function used step wrap transition_states(). view wrap around zoom back first state. pause_first view start pause. default start step aligned static period transition_states() fixed_x, fixed_y Either logical indicating dimension modified view, numeric vector giving lower upper bounds dimension. latter, NA value substituted whatever calculated view (e.g. fixed_x = c(0, NA)) fix minimum x value 0 let view calculate upper bound. exclude_layer Integer vector layer indices ignored calculating view aspect_ratio coord fixed, ensure view matches given aspect ratio. override anything given fixed_x/fixed_y xmin, xmax, ymin, ymax Vectors even length defining boundaries different views go ","code":""},{"path":"/reference/view_zoom.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pan and zoom smoothly between different states — view_zoom","text":"Reach, ., North, C. (2018) Smooth, Efficient, Interruptible Zooming Panning. IEEE Transactions Visualization Computer Graphics DOI:10.1109/TVCG.2018.2800013","code":""},{"path":[]},{"path":"/reference/view_zoom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pan and zoom smoothly between different states — view_zoom","text":"","code":"anim <- ggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)) +   geom_point() +   transition_states(Species, transition_length = 2, state_length = 1) +   shadow_mark(past = TRUE, future = TRUE, colour = 'grey') +   view_zoom(pause_length = 1, step_length = 2, nsteps = 3)  # Use pan_zoom to change the relationship between pan- and zoom movement # Mainly zooming anim1 <- ggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)) +   geom_point() +   transition_states(Species, transition_length = 2, state_length = 1) +   shadow_mark(past = TRUE, future = TRUE, colour = 'grey') +   view_zoom(pause_length = 1, step_length = 2, nsteps = 3, pan_zoom = -3)  # Mainly panning anim2 <- ggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)) +   geom_point() +   transition_states(Species, transition_length = 2, state_length = 1) +   shadow_mark(past = TRUE, future = TRUE, colour = 'grey') +   view_zoom(pause_length = 1, step_length = 2, nsteps = 3, pan_zoom = -3)"},{"path":"/news/index.html","id":"gganimate-development-version","dir":"Changelog","previous_headings":"","what":"gganimate (development version)","title":"gganimate (development version)","text":"Fix using \"svg\" device knitting (#484) Fix correctly getting chunk options knitting (#485) Fix bug transition_reveal() remove data transitions (#480 #473) General upkeep keep line evolvling coding principles ggplot2 (move using vctrs, cli, lifecycle, etc) transition_reveal() now throws error used conjunction stat_align() transitioning stat calculated (#476) Label interpolation now works labels expressions (#439) as_html_video() gains muted, loop, controls argument control presentation video. Like autoplay can controlled knitr chunk options (e.g. gganimate = list(muted = TRUE, loop = TRUE)) (#444)","code":""},{"path":"/news/index.html","id":"gganimate-108","dir":"Changelog","previous_headings":"","what":"gganimate 1.0.8","title":"gganimate 1.0.8","text":"CRAN release: 2022-09-08 Fix bug creating labels aesthetics include glue expressions (#422) Fix bug ffmpeg detection (#346, @rfaelens, #360, @adamdsmith) Remove plyr dependency Fix bug transition_filter() presence NA filter values (#404, @rsaporta) Fix bug static layers include position adjustments (#418) Fix bug transition_time() multiple time values frame lead unexpected stacking data (#414) Fix bug transition_reveal() coinciding tweens result wrong direction arrow (#409) Fix bug transition_layer() last layer exit duration (#384) Fix bug transition_time() facets data different starting time (#357) Make sure exclude_layer view_*() taken account Fix bug using view coord_flip() result weird flickering movement position guies (#336) Fix bug transition_reveal() require input ordered along time dimension point-like geoms (#323) Fix bug view_follow() result errors used discrete scales (#304) Fix bug transition_states() frames relative states combination wrap = FALSE cause error (#301) Fix bug transition_time() time dimension contained NA values (#307)","code":""},{"path":"/news/index.html","id":"gganimate-107","dir":"Changelog","previous_headings":"","what":"gganimate 1.0.7","title":"gganimate 1.0.7","text":"CRAN release: 2020-10-15 Support ragg png device ensure works knitr’s ragg support","code":""},{"path":"/news/index.html","id":"gganimate-106","dir":"Changelog","previous_headings":"","what":"gganimate 1.0.6","title":"gganimate 1.0.6","text":"CRAN release: 2020-07-08","code":""},{"path":"/news/index.html","id":"gganimate-105","dir":"Changelog","previous_headings":"","what":"gganimate 1.0.5","title":"gganimate 1.0.5","text":"CRAN release: 2020-02-09 longer needs png package gifski rendering Give startup message renderer backend detected.","code":""},{"path":"/news/index.html","id":"gganimate-104","dir":"Changelog","previous_headings":"","what":"gganimate 1.0.4","title":"gganimate 1.0.4","text":"CRAN release: 2019-11-18 Fix bug ffmpeg_renderer() fps argument ignored. Make sure ggraph objects registers graph context promoted gganim objects. Better fallback strategy lack gifski.","code":""},{"path":"/news/index.html","id":"gganimate-103","dir":"Changelog","previous_headings":"","what":"gganimate 1.0.3","title":"gganimate 1.0.3","text":"CRAN release: 2019-04-02 Fix conditional plot building step make work ggplot2 3.1.1 hotfix.","code":""},{"path":"/news/index.html","id":"gganimate-102","dir":"Changelog","previous_headings":"","what":"gganimate 1.0.2","title":"gganimate 1.0.2","text":"CRAN release: 2019-03-03 Fix registration S3 methods suggested packages.","code":""},{"path":"/news/index.html","id":"gganimate-101","dir":"Changelog","previous_headings":"","what":"gganimate 1.0.1","title":"gganimate 1.0.1","text":"CRAN release: 2019-02-15 Fix bug transitions group aesthetic late evalued (#262) Better fade support geom_smooth(). ribbon line now fade. Fix bug transitions group aesthetic string interpreted double (#266) Fix bug shadow_mark() future shadows drawn main frame data. Better error messages layer type supported transition Fix bug transitions didn’t work difftime/hms specifying durations transition variable POSIX date class. Fix bug using view modify plot coordinate system -place, resulting modifications original plot object. view_follow now works transformed scales.","code":""},{"path":"/news/index.html","id":"gganimate-100","dir":"Changelog","previous_headings":"","what":"gganimate 1.0.0","title":"gganimate 1.0.0","text":"CRAN release: 2019-01-02 First CRAN release, featuring complete rewrite… much stuff put changelog","code":""}]
